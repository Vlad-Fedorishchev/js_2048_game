{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","startMessage","loseMessage","allMessages","querySelectorAll","winMessage","scoreCountElement","fieldRows","firstRow","children","secondRow","thirdRow","fourthRow","scoreOfTheGame","theGameStarted","gameMarkup","addEventListener","classList","contains","remove","add","textContent","map","row","fill","fillRandomCell","render","checkGameOver","handleRowRender","gameRow","markupRow","forEach","cell","index","className","emptyCells","rowIndex","colIndex","push","col","length","randomNum","Math","random","randomIndex","floor","action","key","moveUp","moveDown","moveLeft","moveRight","some","includes","currentRow","currentCol","gameOver"],"mappings":"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","file":"main.d6e7a95d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst allMessages = document.querySelectorAll('.message');\nconst winMessage = document.querySelector('.message-win');\nconst scoreCountElement = document.querySelector('.game-score');\n\nconst fieldRows = document.querySelectorAll('.field-row');\n\nconst firstRow = fieldRows[0].children;\nconst secondRow = fieldRows[1].children;\nconst thirdRow = fieldRows[2].children;\nconst fourthRow = fieldRows[3].children;\n\nlet scoreOfTheGame = 500;\nlet theGameStarted = false;\n\nconst gameMarkup = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    theGameStarted = true;\n\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n\n    scoreOfTheGame = 0;\n    startMessage.classList.add('hidden');\n\n    gameMarkup.map(row => row.fill(0));\n\n    fillRandomCell();\n    fillRandomCell();\n    render();\n  } else if (startButton.classList.contains('restart')) {\n    if (!checkGameOver()) {\n      scoreOfTheGame = 0;\n\n      gameMarkup.map(row => row.fill(0));\n\n      fillRandomCell();\n      fillRandomCell();\n      render();\n    } else {\n      startButton.classList.remove('restart');\n      startButton.classList.add('start');\n      startButton.textContent = 'Start';\n\n      theGameStarted = false;\n\n      scoreOfTheGame = 0;\n\n      for (const message of allMessages) {\n        message.classList.add('hidden');\n      }\n\n      gameMarkup.map(row => row.fill(0));\n\n      startMessage.classList.remove('hidden');\n\n      render();\n    }\n  }\n});\n\nconst render = () => {\n  handleRowRender(firstRow, gameMarkup[0]);\n  handleRowRender(secondRow, gameMarkup[1]);\n  handleRowRender(thirdRow, gameMarkup[2]);\n  handleRowRender(fourthRow, gameMarkup[3]);\n\n  scoreCountElement.textContent = scoreOfTheGame;\n};\n\nconst handleRowRender = (gameRow, markupRow) => {\n  [...gameRow].forEach((cell, index) => {\n    if (markupRow[index] !== 0) {\n      cell.textContent = markupRow[index];\n      cell.className = `field-cell field-cell--${markupRow[index]}`;\n    } else {\n      cell.textContent = '';\n      cell.className = 'field-cell';\n    }\n  });\n};\n\nconst fillRandomCell = () => {\n  const emptyCells = [];\n\n  gameMarkup.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      if (cell === 0) {\n        emptyCells.push({\n          row: rowIndex,\n          col: colIndex,\n        });\n      }\n    });\n  });\n\n  if (emptyCells.length > 0) {\n    const randomNum = Math.random() < 0.9 ? 2 : 4;\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const { row, col } = emptyCells[randomIndex];\n\n    gameMarkup[row][col] = randomNum;\n  }\n};\n\ndocument.addEventListener('keydown', (action) => {\n  const key = action.key;\n\n  if (theGameStarted) {\n    switch (key) {\n      case 'ArrowUp':\n        moveUp();\n        fillRandomCell();\n        break;\n      case 'ArrowDown':\n        moveDown();\n        fillRandomCell();\n        break;\n      case 'ArrowLeft':\n        moveLeft();\n        fillRandomCell();\n        break;\n      case 'ArrowRight':\n        moveRight();\n        fillRandomCell();\n        break;\n      default:\n        return;\n    }\n    render();\n  }\n\n  if (checkGameOver()) {\n    loseMessage.classList.remove('hidden');\n  }\n\n  if (gameMarkup.some(row => row.includes(2048))) {\n    winMessage.classList.remove('hidden');\n  }\n});\n\nconst moveUp = () => {\n  for (let col = 0; col < 4; col++) {\n    gameMarkup.forEach((row, rowIndex) => {\n      if (row[col] !== 0) {\n        let currentRow = rowIndex;\n\n        while (currentRow > 0 && gameMarkup[currentRow - 1][col] === 0) {\n          gameMarkup[currentRow - 1][col] = gameMarkup[currentRow][col];\n          gameMarkup[currentRow][col] = 0;\n          currentRow--;\n        }\n\n        if (currentRow > 0\n           && gameMarkup[currentRow - 1][col] === gameMarkup[currentRow][col]) {\n          gameMarkup[currentRow - 1][col] *= 2;\n          scoreOfTheGame += gameMarkup[currentRow - 1][col];\n          gameMarkup[currentRow][col] = 0;\n        }\n      }\n    });\n  }\n};\n\nconst moveDown = () => {\n  for (let col = 0; col < 4; col++) {\n    gameMarkup.forEach((row, rowIndex) => {\n      if (row[col] !== 0) {\n        let currentRow = rowIndex;\n\n        while (currentRow < 3 && gameMarkup[currentRow + 1][col] === 0) {\n          gameMarkup[currentRow + 1][col] = gameMarkup[currentRow][col];\n          gameMarkup[currentRow][col] = 0;\n          currentRow++;\n        }\n\n        if (currentRow < 3\n           && gameMarkup[currentRow + 1][col] === gameMarkup[currentRow][col]) {\n          gameMarkup[currentRow + 1][col] *= 2;\n          scoreOfTheGame += gameMarkup[currentRow + 1][col];\n          gameMarkup[currentRow][col] = 0;\n        }\n      }\n    });\n  }\n};\n\nconst moveLeft = () => {\n  gameMarkup.forEach((row) => {\n    for (let col = 1; col < 4; col++) {\n      if (row[col] !== 0) {\n        let currentCol = col;\n\n        while (currentCol > 0 && row[currentCol - 1] === 0) {\n          row[currentCol - 1] = row[currentCol];\n          row[currentCol] = 0;\n          currentCol--;\n        }\n\n        if (currentCol > 0 && row[currentCol - 1] === row[currentCol]) {\n          row[currentCol - 1] *= 2;\n          scoreOfTheGame += row[currentCol - 1];\n          row[currentCol] = 0;\n        }\n      }\n    }\n  });\n};\n\nconst moveRight = () => {\n  gameMarkup.forEach((row) => {\n    for (let col = 2; col >= 0; col--) {\n      if (row[col] !== 0) {\n        let currentCol = col;\n\n        while (currentCol < 3 && row[currentCol + 1] === 0) {\n          row[currentCol + 1] = row[currentCol];\n          row[currentCol] = 0;\n          currentCol++;\n        }\n\n        if (currentCol < 3 && row[currentCol + 1] === row[currentCol]) {\n          row[currentCol + 1] *= 2;\n          scoreOfTheGame += row[currentCol + 1];\n          row[currentCol] = 0;\n        }\n      }\n    }\n  });\n};\n\nconst checkGameOver = () => {\n  if (!gameMarkup.some(row => row.includes(0))) {\n    let gameOver = true;\n\n    gameMarkup.forEach((row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        if (colIndex < 3 && cell === gameMarkup[rowIndex][colIndex + 1]) {\n          gameOver = false;\n        }\n\n        if (rowIndex < 3 && cell === gameMarkup[rowIndex + 1][colIndex]) {\n          gameOver = false;\n        }\n      });\n    });\n\n    return gameOver;\n  }\n};\n"]}